datasets v3
===========

Dataset
-------
owner = models.ForeignKey(settings.AUTH_USER_MODEL,
                          related_name='datasets', on_delete=models.CASCADE)
label = models.CharField(max_length=20, null=False, unique="True", blank=True,
          error_messages={'unique': 'The dataset label entered is already in use, and must be unique. Try appending a version # or initials.'})
title = models.CharField(max_length=255, null=False)
description = models.CharField(max_length=2044, null=False)
webpage = models.URLField(null=True, blank=True)
create_date = models.DateTimeField(null=True, auto_now_add=True)
uri_base = models.URLField(null=True, blank=True)
image_file = ResizedImageField(size=[800, 600], upload_to=ds_image_path, blank=True, null=True)
featured = models.IntegerField(null=True, blank=True)
bbox = geomodels.PolygonField(null=True, blank=True, srid=4326)

core = models.BooleanField(default=False) # e.g. tgn, geonames, physical geography
public = models.BooleanField(default=False)

ds_status = models.CharField(max_length=12, null=True, blank=True, choices=STATUS_DS)
creator = models.CharField(max_length=500, null=True, blank=True)
source = models.CharField(max_length=500, null=True, blank=True)
contributors = models.CharField(max_length=500, null=True, blank=True)
citation = models.CharField(max_length=2044, null=True, blank=True)
datatype = models.CharField(max_length=12, null=False,choices=DATATYPES,
                              default='place')
numrows = models.IntegerField(null=True, blank=True)
numlinked = models.IntegerField(null=True, blank=True)
total_links = models.IntegerField(null=True, blank=True)

pdf = models.FileField(upload_to=dataset_pdf_path, blank=True, null=True)
idx_builder = models.BooleanField(default=False)
vis_parameters = JSONField(default=dict, null=True, blank=True)
volunteers = models.BooleanField(default=False)

DatasetFile
-----------
dataset_id = models.ForeignKey(Dataset, related_name='files',
  default=-1, on_delete=models.CASCADE)
rev = models.IntegerField(null=True, blank=True)
file = models.FileField(upload_to=dataset_file_path)
format = models.CharField(max_length=12, null=False,
                            choices=FORMATS, default='lpf')
datatype = models.CharField(max_length=12, null=False, choices=DATATYPES,
                              default='place')
delimiter = models.CharField(max_length=5, null=True, blank=True)
df_status = models.CharField(max_length=12, null=True, blank=True, choices=STATUS_FILE)
upload_date = models.DateTimeField(null=True, auto_now_add=True)
header = ArrayField(models.CharField(max_length=30), null=True, blank=True)
numrows = models.IntegerField(null=True, blank=True)

DatasetUser
-----------
dataset_id = models.ForeignKey(Dataset, related_name='collabs',
                                 default=-1, on_delete=models.CASCADE)
user_id = models.ForeignKey(User, related_name='ds_collab',
                              default=-1, on_delete=models.CASCADE)
role = models.CharField(max_length=20, null=False, choices=TEAMROLES)

Hit
---
place = models.ForeignKey(Place, on_delete=models.CASCADE)
task_id = models.CharField(max_length=50)
authority = models.CharField(max_length=12, choices=AUTHORITIES )
dataset = models.ForeignKey(Dataset, on_delete=models.CASCADE)
query_pass = models.CharField(max_length=12, choices=PASSES )
src_id = models.CharField(max_length=2044)
score = models.FloatField()
reviewed = models.BooleanField(default=False)
matched = models.BooleanField(default=False)
flag = models.BooleanField(default=False)
authrecord_id = models.CharField(max_length=255)
json = JSONField(blank=True, null=True)
geom = JSONField(blank=True, null=True)

