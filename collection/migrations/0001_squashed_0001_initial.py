# Generated by Django 4.1.7 on 2023-07-22 07:22

import collection.models
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms


class Migration(migrations.Migration):

    replaces = [('collection', '0001_initial')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=3000)),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), null=True, size=None)),
                ('omitted', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=collection.models.default_omitted, size=None)),
                ('rel_keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), blank=True, null=True, size=None)),
                ('creator', models.CharField(blank=True, max_length=500, null=True)),
                ('contact', models.CharField(blank=True, max_length=500, null=True)),
                ('webpage', models.URLField(blank=True, null=True)),
                ('collection_class', models.CharField(choices=[('dataset', 'Dataset collection'), ('place', 'Place collection')], max_length=12)),
                ('image_file', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=75, size=[800, 600], upload_to=collection.models.collection_path)),
                ('file', models.FileField(blank=True, null=True, upload_to=collection.models.collection_path)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('published', 'Published'), ('ready', 'Ready'), ('demo', 'Demo'), ('sandbox', 'Sandbox'), ('group', 'Group')], default='sandbox', max_length=12)),
                ('featured', models.IntegerField(blank=True, null=True)),
                ('public', models.BooleanField(default=False)),
                ('submitted', models.BooleanField(default=False)),
                ('nominated', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'collections',
            },
        ),
        migrations.CreateModel(
            name='CollectionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(max_length=3000, null=True)),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), null=True, size=None)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('due_date', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'collection_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CollectionGroupUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('normal', 'normal'), ('group_leader', 'group leader'), ('superuser', 'superuser')], default='normal', max_length=20)),
            ],
            options={
                'db_table': 'collection_group_user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CollectionLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=200, null=True)),
                ('uri', models.TextField(validators=[django.core.validators.URLValidator()])),
                ('link_type', models.CharField(choices=[('page', "<i title class='fa fa-window-maximize'></i>"), ('image', '<img src="/static/images/noun-photo.svg" width="16"/>'), ('pdf', "<i title class='fa fa-file-pdf'></i>")], default='page', max_length=10)),
                ('license', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'collection_link',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CollectionUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('creator', 'Creator'), ('owner', 'Owner'), ('member', 'Team Member')], max_length=20)),
                ('collection', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='collabs', to='collection.collection')),
            ],
            options={
                'db_table': 'collection_user',
                'managed': True,
            },
        ),
    ]
