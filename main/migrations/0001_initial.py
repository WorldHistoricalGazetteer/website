# Generated by Django 4.1.7 on 2023-04-09 14:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('datasets', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(choices=[('typo', 'Typo'), ('geom_error', 'Geometry error'), ('defer', 'Deferring (in review)'), ('other', 'Other')], default='other', max_length=20)),
                ('note', models.CharField(blank=True, max_length=2044, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'comments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('user', 'User'), ('dataset', 'Dataset'), ('collection', 'Collection')], max_length=20)),
                ('logtype', models.CharField(choices=[('ds_create', 'Create dataset'), ('ds_update', 'Update dataset'), ('ds_delete', 'Delete dataset'), ('ds_recon', 'Reconciliation task'), ('area_create', 'Create area'), ('area_update', 'Update area'), ('area_delete', 'Delete area'), ('collection_create', 'Create collection'), ('collection_update', 'Update collection'), ('collection_delete', 'Delete collection'), ('annotation', 'Create/update annotation')], max_length=20)),
                ('subtype', models.CharField(blank=True, max_length=50, null=True)),
                ('note', models.CharField(blank=True, max_length=2044, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('dataset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='log', to='datasets.dataset')),
            ],
            options={
                'db_table': 'log',
                'managed': True,
            },
        ),
    ]
