# Use the official PostGIS image as the base
FROM postgis/postgis:15-3.4

# Install necessary packages for WAL-G
RUN apt-get update && \
    apt-get install -y wget lsb-release gnupg2 && \
    echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list && \
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
    apt-get update && \
    apt-get install -y postgresql-client-15

# Install WAL-G
RUN wget https://github.com/wal-g/wal-g/releases/download/v3.0.2/wal-g-pg-ubuntu-20.04-amd64.tar.gz && \
    tar -zxvf wal-g-pg-ubuntu-20.04-amd64.tar.gz && \
    mv wal-g-pg-ubuntu-20.04-amd64 /usr/local/bin/wal-g && \
    rm wal-g-pg-ubuntu-20.04-amd64.tar.gz

# Create the directory for initialization scripts
RUN mkdir -p /docker-entrypoint-initdb.d

# Copy the startup script
COPY ./start-postgres.sh /docker-entrypoint-initdb.d/10_postgis.sh
RUN sed -i 's/\r$//g' /docker-entrypoint-initdb.d/10_postgis.sh
RUN chmod +x /docker-entrypoint-initdb.d/10_postgis.sh

# Copy the custom configuration file for Write Ahead Logging and Archiving
COPY ./postgresql.wal-settings.conf /etc/postgresql/postgresql.wal-settings.conf
