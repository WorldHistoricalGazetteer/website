# Generated by Django 4.1.7 on 2023-04-09 14:50

import datasets.models
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, error_messages={'unique': 'The dataset label entered is already in use, and must be unique. Try appending a version # or initials.'}, max_length=20, unique='True')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=2044)),
                ('webpage', models.URLField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('uri_base', models.URLField(blank=True, null=True)),
                ('image_file', models.FileField(blank=True, null=True, upload_to=datasets.models.ds_image_path)),
                ('featured', models.IntegerField(blank=True, null=True)),
                ('bbox', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('core', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('ds_status', models.CharField(blank=True, choices=[('format_error', 'Invalid format'), ('format_ok', 'Valid format'), ('remote', 'Created remotely'), ('uploaded', 'File uploaded'), ('reconciling', 'Reconciling'), ('wd-complete', 'Wikidata recon completed'), ('accessioning', 'Accessioning'), ('indexed', 'Indexed')], max_length=12, null=True)),
                ('creator', models.CharField(blank=True, max_length=500, null=True)),
                ('source', models.CharField(blank=True, max_length=500, null=True)),
                ('contributors', models.CharField(blank=True, max_length=500, null=True)),
                ('citation', models.CharField(blank=True, max_length=2044, null=True)),
                ('datatype', models.CharField(choices=[('place', 'Places'), ('anno', 'Traces')], default='place', max_length=12)),
                ('numrows', models.IntegerField(blank=True, null=True)),
                ('numlinked', models.IntegerField(blank=True, null=True)),
                ('total_links', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'datasets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DatasetFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rev', models.IntegerField(blank=True, null=True)),
                ('file', models.FileField(upload_to=datasets.models.user_directory_path)),
                ('format', models.CharField(choices=[('delimited', 'Delimited/Spreadsheet'), ('lpf', 'Linked Places v1.2'), ('dummy', 'empty file')], default='lpf', max_length=12)),
                ('datatype', models.CharField(choices=[('place', 'Places'), ('anno', 'Traces')], default='place', max_length=12)),
                ('delimiter', models.CharField(blank=True, max_length=5, null=True)),
                ('df_status', models.CharField(blank=True, choices=[('format_ok', 'Valid format'), ('uploaded', 'File uploaded'), ('dummy', 'Dummy for remote')], max_length=12, null=True)),
                ('upload_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('header', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), blank=True, null=True, size=None)),
                ('numrows', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dataset_file',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DatasetUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('creator', 'Creator'), ('owner', 'Owner'), ('member', 'Team Member')], max_length=20)),
            ],
            options={
                'db_table': 'dataset_user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Hit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=50)),
                ('authority', models.CharField(choices=[('tgn', 'Getty TGN'), ('dbp', 'DBpedia'), ('gn', 'Geonames'), ('wd', 'Wikidata'), ('core', 'WHG Spine'), ('whg', 'WHG')], max_length=12)),
                ('query_pass', models.CharField(choices=[('pass1', 'Query pass 1'), ('pass2', 'Query pass 2'), ('pass3', 'Query pass 3')], max_length=12)),
                ('src_id', models.CharField(max_length=2044)),
                ('score', models.FloatField()),
                ('reviewed', models.BooleanField(default=False)),
                ('matched', models.BooleanField(default=False)),
                ('flag', models.BooleanField(default=False)),
                ('authrecord_id', models.CharField(max_length=255)),
                ('json', models.JSONField(blank=True, null=True)),
                ('geom', models.JSONField(blank=True, null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datasets.dataset')),
            ],
            options={
                'db_table': 'hits',
                'managed': True,
            },
        ),
    ]
